# Fedora macros, safe to use at SRPM build stage

# A directory for rpm macros
%rpmmacrodir /usr/lib/rpm/macros.d

# A directory for appdata metainfo.  This has changed between releases so a
# macro is useful.
%_metainfodir %{_datadir}/metainfo

# A directory for SWID tag files describing the installation
%_swidtagdir %{_prefix}/lib/swidtag/fedoraproject.org

# Applies the fedora.wordwrap filter to the content of an rpm variable, and
# prints the result.
#   – putting multiple lines of UTF-8 text inside a variable is usually
#     accomplished with %{expand:some_text}
# Control variables, flags and arguments:
#   -v <variable_name>  (default value: _description)
%wordwrap(v:) %{lua:
local   fedora = require "fedora.common"
local variable = "%{?" .. rpm.expand("%{-v*}%{!-v:_description}") .. "}"
print(fedora.wordwrap(variable))
}

# A single Name: and %package substitute
# Control variables, flags and arguments:
#   %{source_name}         the SRPM name
#   %{source_summary}      the SRPM summary
#   %{source_description}  the SRPM description
#   -n <name>              declare a package named <name>
#                          (%package-like behavior)
#   -v                     be verbose
#   %1                     declare a package named %{source_name}-%{%1}
#                          (%package-like behavior)
%new_package(n:v) %{lua:
local      fedora = require "fedora.common"
local    pkg_name = fedora.readflag("n")
local     verbose = fedora.hasflag("v")
local name_suffix = fedora.read("1")
local source_name = fedora.read("source_name")
local       first = not ( fedora.read("name") or fedora.read("currentname") )
fedora.new_package(source_name, pkg_name, name_suffix, first, verbose)
}
