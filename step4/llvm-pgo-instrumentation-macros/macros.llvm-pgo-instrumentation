# llvm-rpm-macros-pgo
#
# Author: Konrad Kleine <kkleine@redhat.com>

# To disable generation of profile subpackage, specify this in specfile:
# %global _toolchain_profile_subpackages %{nil}
# TODO: Make sure to only enable it when building with clang.
# tag::_toolchain_profile_subpackages[]
%_toolchain_profile_subpackages 1
# end::_toolchain_profile_subpackages[]

# tag::subpackage_template[]
# Generate profiledata packages for the compiler
%_toolchain_profile_subpackage_template \
%package -n %{name}-%{toolchain}-pgo-profdata \
Summary: Indexed PGO profile data from %{name} package \
%description -n %{name}-%{toolchain}-pgo-profdata \
This package contains profiledata for %{toolchain} that was generated while \
compiling %{name}. This can be used for doing Profile Guided Optimizations \
(PGO) builds of %{toolchain} \
%files -n %{name}-%{toolchain}-pgo-profdata \
%{_libdir}/%{toolchain}-pgo-profdata/%{name}/%{name}.%{toolchain}.profdata \
%{nil}
# end::subpackage_template[]

# tag::_pgo[]
# Auxilliary PGO profile to which the background job merges continously 
%_pgo_background_merge_target %{_builddir}/%{name}.%{toolchain}.background.merge

# Place where the background job stores its PID file
# %%_pgo_pid_file %{_builddir}/background-merge.pid
%_pgo_pid_file /tmp/background-merge.pid

# How to specify the LLVM_PROFILE_FILE
%_pgo_llvm_profile_file %t/%{name}.%{toolchain}.%m.%p.profraw

# Where to store all raw PGO profiles
%_pgo_tmpdir %{_builddir}/raw-pgo-profdata

%_pgo_shutdown_file %{_pgo_tmpdir}/background-merge.shutdown

# Use this before calling an instrumented LLVM binary.
%_pgo_env \\\
  TMPDIR='%{_pgo_tmpdir}' \\\
  && export TMPDIR \\\
  && mkdir -pv $TMPDIR \\\
  && LLVM_PROFILE_FILE='%{_pgo_llvm_profile_file}' \\\
  && export LLVM_PROFILE_FILE
# end::_pgo[]

# The following %%llvm_pgo_instrumented_XXX macros will be used in redhat-rpm-config
# ----------------------------------------------------------------------------------

%llvm_pgo_instrumented_build_flags [ 0%{_toolchain_profile_subpackages} > 0 ] && %{_pgo_env}

%llvm_pgo_instrumented_spec_build_pre \
    [ 0%{_toolchain_profile_subpackages} > 0 ] \\\
    && %{_pgo_env} \\\
    && /usr/lib/rpm/redhat/pgo-background-merge.sh \\\
      -d %{_pgo_tmpdir} \\\
      -f %{_pgo_background_merge_target} \\\
      -p %{_pgo_pid_file} & \
# end::__spec_build_pre[]

# tag::__spec_build_post[]
# Overriding __spec_build_post macro from /usr/lib/rpm/macros
%llvm_pgo_instrumented_spec_build_post	\
  if [ 0%{_toolchain_profile_subpackages} > 0 ]\
  then\
      echo 'please exit' > %{_pgo_shutdown_file};\
      [ -e %{_pgo_pid_file} ] && inotifywait -e delete_self %{_pgo_pid_file} || true;\
  fi\
# end::__spec_build_post[]

# tag::find_and_merge_profiles[]
%__merge_profdata %[ 0%{_toolchain_profile_subpackages} > 0 ? "\\\
  mkdir -pv %{buildroot}%{_libdir}/%{toolchain}-pgo-profdata/%{name} \\\
  && %{_pgo_env} \\\
  && llvm-profdata merge \\\
    --compress-all-sections \\\
    --sparse \\\
    %{_pgo_background_merge_target} \\\
    $(find %{_builddir}/raw-pgo-profdata -type f -name '*.profraw') \\\
    -o %{buildroot}%{_libdir}/%{toolchain}-pgo-profdata/%{name}/%{name}.%{toolchain}.profdata \\\
  " : "%{nil}" ]
# end::find_and_merge_profiles[]

# tag::post_install[]
%llvm_pgo_instrumented_os_install_post %{?_toolchain_profile_subpackages:%{?__merge_profdata}}
# end::post_install[]

%llvm_pgo_instrumented_install\
  %[ 0%{_toolchain_profile_subpackages} > 0 ? "%{_toolchain_profile_subpackage_template}" : "%{nil}" ]